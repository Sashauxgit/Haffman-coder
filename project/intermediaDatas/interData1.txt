Алфавит и сгенерированные специальные кода каждого символа:
a - 0000000

b - 0000001

c - 0000010

d - 0000011

e - 0000100

f - 0000101

g - 0000110

h - 0000111

i - 0001000

j - 0001001

k - 0001010

l - 0001011

m - 000110

n - 000111

o - 001000

p - 001001

q - 001010

r - 001011

s - 001100

t - 001101

u - 001110

v - 001111

w - 010000

x - 010001

y - 010010

z - 010011

A - 010100

B - 010101

C - 010110

D - 010111

E - 011000

F - 011001

G - 011010

H - 011011

I - 011100

J - 011101

K - 011110

L - 011111

M - 100000

N - 100001

O - 100010

P - 100011

Q - 100100

R - 100101

S - 100110

T - 100111

U - 101000

V - 101001

W - 101010

X - 101011

Y - 101100

Z - 101101

0 - 101110

1 - 101111

2 - 110000

3 - 110001

4 - 110010

5 - 110011

6 - 110100

7 - 110101

8 - 110110

9 - 110111

. - 111000

, - 111001

! - 111010

? - 111011

: - 111100

( - 111101

) - 111110

  - 111111


Промежуточные данные:
---------------------------------
На вход кодировщику поступает символ 'm'
Текущее дерево кодировщика:
(0[\0])

Символ 'm' еще не встречался в кодируемом сообщении =>
1) Берется код пустого символа: 
2) К нему добавляется спец-код символа 'm' из алфавита: 000110
3) К узлу с пустым символом добавляются два новых узла:
Левый сын - новый пустой узел, а правый - узел с новым добавленным символом: 'm':
       (0)      
(0[\0])   (1[m])

Производится пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с пересчитанными весами:
       (1)      
(0[\0])   (1[m])

Результат кодирования символа 'm' - 000110
---------------------------------
---------------------------------
На вход кодировщику поступает символ 'a'
Текущее дерево кодировщика:
       (1)      
(0[\0])   (1[m])

Символ 'a' еще не встречался в кодируемом сообщении =>
1) Берется код пустого символа: 0
2) К нему добавляется спец-код символа 'a' из алфавита: 0000000
3) К узлу с пустым символом добавляются два новых узла:
Левый сын - новый пустой узел, а правый - узел с новым добавленным символом: 'a':
                (1)      
       (0)         (1[m])
(0[\0])   (1[a])         

Производится пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с пересчитанными весами:
                (2)      
       (1)         (1[m])
(0[\0])   (1[a])         

Результат кодирования символа 'a' - 00000000
---------------------------------
---------------------------------
На вход кодировщику поступает символ 'm'
Текущее дерево кодировщика:
                (2)      
       (1)         (1[m])
(0[\0])   (1[a])         

Символ 'm' уже встречался в кодируемом сообщении и присутствует в дереве => вес узла с этим символом в дереве учеличивается на 1:
                (2)      
       (1)         (2[m])
(0[\0])   (1[a])         

Код символа 'm', собранный по пути к узлу дерева: 1

Производится пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с пересчитанными весами:
                (3)      
       (1)         (2[m])
(0[\0])   (1[a])         

Результат кодирования символа 'm' - 1
---------------------------------
---------------------------------
На вход кодировщику поступает символ 'a'
Текущее дерево кодировщика:
                (3)      
       (1)         (2[m])
(0[\0])   (1[a])         

Символ 'a' уже встречался в кодируемом сообщении и присутствует в дереве => вес узла с этим символом в дереве учеличивается на 1:
                (3)      
       (1)         (2[m])
(0[\0])   (2[a])         

Код символа 'a', собранный по пути к узлу дерева: 01

Производится пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с пересчитанными весами:
                (4)      
       (2)         (2[m])
(0[\0])   (2[a])         

Результат кодирования символа 'a' - 01
---------------------------------
---------------------------------
На вход кодировщику поступает символ ' '
Текущее дерево кодировщика:
                (4)      
       (2)         (2[m])
(0[\0])   (2[a])         

Символ ' ' еще не встречался в кодируемом сообщении =>
1) Берется код пустого символа: 00
2) К нему добавляется спец-код символа ' ' из алфавита: 111111
3) К узлу с пустым символом добавляются два новых узла:
Левый сын - новый пустой узел, а правый - узел с новым добавленным символом: ' ':
                         (4)      
                (2)         (2[m])
       (0)         (2[a])         
(0[\0])   (1[ ])                  

Производится пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с пересчитанными весами:
                         (5)      
                (3)         (2[m])
       (1)         (2[a])         
(0[\0])   (1[ ])                  

Требуется перевесить ветки:
                (3)      
       (1)         (2[a])
(0[\0])   (1[ ])         

и

(2[m])

Повторный пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с перевешанными ветками и с пересчитанными весами:
      (5)                         
(2[m])                   (3)      
                (1)         (2[a])
         (0[\0])   (1[ ])         

Результат кодирования символа ' ' - 00111111
---------------------------------
---------------------------------
На вход кодировщику поступает символ 'A'
Текущее дерево кодировщика:
      (5)                         
(2[m])                   (3)      
                (1)         (2[a])
         (0[\0])   (1[ ])         

Символ 'A' еще не встречался в кодируемом сообщении =>
1) Берется код пустого символа: 100
2) К нему добавляется спец-код символа 'A' из алфавита: 010100
3) К узлу с пустым символом добавляются два новых узла:
Левый сын - новый пустой узел, а правый - узел с новым добавленным символом: 'A':
      (5)                                  
(2[m])                            (3)      
                         (1)         (2[a])
                (0)         (1[ ])         
         (0[\0])   (1[A])                  

Производится пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с пересчитанными весами:
      (6)                                  
(2[m])                            (4)      
                         (2)         (2[a])
                (1)         (1[ ])         
         (0[\0])   (1[A])                  

Результат кодирования символа 'A' - 100010100
---------------------------------
---------------------------------
На вход кодировщику поступает символ 'n'
Текущее дерево кодировщика:
      (6)                                  
(2[m])                            (4)      
                         (2)         (2[a])
                (1)         (1[ ])         
         (0[\0])   (1[A])                  

Символ 'n' еще не встречался в кодируемом сообщении =>
1) Берется код пустого символа: 1000
2) К нему добавляется спец-код символа 'n' из алфавита: 000111
3) К узлу с пустым символом добавляются два новых узла:
Левый сын - новый пустой узел, а правый - узел с новым добавленным символом: 'n':
      (6)                                           
(2[m])                                     (4)      
                                  (2)         (2[a])
                         (1)         (1[ ])         
                (0)         (1[A])                  
         (0[\0])   (1[n])                           

Производится пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с пересчитанными весами:
      (7)                                           
(2[m])                                     (5)      
                                  (3)         (2[a])
                         (2)         (1[ ])         
                (1)         (1[A])                  
         (0[\0])   (1[n])                           

Требуется перевесить ветки:
                (2)      
       (1)         (1[A])
(0[\0])   (1[n])         

и

(1[ ])

Повторный пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с перевешанными ветками и с пересчитанными весами:
      (7)                                           
(2[m])                                     (5)      
               (3)                            (2[a])
         (1[ ])                   (2)               
                         (1)         (1[A])         
                  (0[\0])   (1[n])                  

Требуется перевесить ветки:
      (3)                         
(1[ ])                   (2)      
                (1)         (1[A])
         (0[\0])   (1[n])         

и

(2[m])

Повторный пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с перевешанными ветками и с пересчитанными весами:
                                  (7)               
      (3)                                  (4)      
(1[ ])                   (2)         (2[m])   (2[a])
                (1)         (1[A])                  
         (0[\0])   (1[n])                           

Результат кодирования символа 'n' - 1000000111
---------------------------------
---------------------------------
На вход кодировщику поступает символ 'n'
Текущее дерево кодировщика:
                                  (7)               
      (3)                                  (4)      
(1[ ])                   (2)         (2[m])   (2[a])
                (1)         (1[A])                  
         (0[\0])   (1[n])                           

Символ 'n' уже встречался в кодируемом сообщении и присутствует в дереве => вес узла с этим символом в дереве учеличивается на 1:
                                  (7)               
      (3)                                  (4)      
(1[ ])                   (2)         (2[m])   (2[a])
                (1)         (1[A])                  
         (0[\0])   (2[n])                           

Код символа 'n', собранный по пути к узлу дерева: 0101

Производится пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с пересчитанными весами:
                                  (8)               
      (4)                                  (4)      
(1[ ])                   (3)         (2[m])   (2[a])
                (2)         (1[A])                  
         (0[\0])   (2[n])                           

Требуется перевесить ветки:
       (2)      
(0[\0])   (2[n])

и

(1[ ])

Повторный пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с перевешанными ветками и с пересчитанными весами:
                                  (8)               
                (4)                        (4)      
       (2)               (2)         (2[m])   (2[a])
(0[\0])   (2[n])   (1[ ])   (1[A])                  

Требуется перевесить ветки:
(2[n])

и

(1[A])

Повторный пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с перевешанными ветками и с пересчитанными весами:
                                  (8)               
                (4)                        (4)      
       (1)               (3)         (2[m])   (2[a])
(0[\0])   (1[A])   (1[ ])   (2[n])                  

Требуется перевесить ветки:
(2[n])

и

       (1)      
(0[\0])   (1[A])

Повторный пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с перевешанными ветками и с пересчитанными весами:
                                  (8)               
      (4)                                  (4)      
(2[n])         (2)                   (2[m])   (2[a])
         (1[ ])          (1)                        
                  (0[\0])   (1[A])                  

Результат кодирования символа 'n' - 0101
---------------------------------
---------------------------------
На вход кодировщику поступает символ 'a'
Текущее дерево кодировщика:
                                  (8)               
      (4)                                  (4)      
(2[n])         (2)                   (2[m])   (2[a])
         (1[ ])          (1)                        
                  (0[\0])   (1[A])                  

Символ 'a' уже встречался в кодируемом сообщении и присутствует в дереве => вес узла с этим символом в дереве учеличивается на 1:
                                  (8)               
      (4)                                  (4)      
(2[n])         (2)                   (2[m])   (3[a])
         (1[ ])          (1)                        
                  (0[\0])   (1[A])                  

Код символа 'a', собранный по пути к узлу дерева: 11

Производится пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с пересчитанными весами:
                                  (9)               
      (4)                                  (5)      
(2[n])         (2)                   (2[m])   (3[a])
         (1[ ])          (1)                        
                  (0[\0])   (1[A])                  

Результат кодирования символа 'a' - 11
---------------------------------
---------------------------------
На вход кодировщику поступает символ ')'
Текущее дерево кодировщика:
                                  (9)               
      (4)                                  (5)      
(2[n])         (2)                   (2[m])   (3[a])
         (1[ ])          (1)                        
                  (0[\0])   (1[A])                  

Символ ')' еще не встречался в кодируемом сообщении =>
1) Берется код пустого символа: 0110
2) К нему добавляется спец-код символа ')' из алфавита: 111110
3) К узлу с пустым символом добавляются два новых узла:
Левый сын - новый пустой узел, а правый - узел с новым добавленным символом: ')':
                                           (9)               
      (4)                                           (5)      
(2[n])         (2)                            (2[m])   (3[a])
         (1[ ])                   (1)                        
                         (0)         (1[A])                  
                  (0[\0])   (1[)])                           

Производится пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с пересчитанными весами:
                                           (10)               
      (5)                                            (5)      
(2[n])         (3)                             (2[m])   (3[a])
         (1[ ])                   (2)                         
                         (1)         (1[A])                   
                  (0[\0])   (1[)])                            

Требуется перевесить ветки:
      (3)                         
(1[ ])                   (2)      
                (1)         (1[A])
         (0[\0])   (1[)])         

и

(2[m])

Повторный пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с перевешанными ветками и с пересчитанными весами:
               (10)                                           
      (4)                                            (6)      
(2[n])   (2[m])          (3)                            (3[a])
                   (1[ ])                   (2)               
                                   (1)         (1[A])         
                            (0[\0])   (1[)])                  

Результат кодирования символа ')' - 0110111110
---------------------------------
