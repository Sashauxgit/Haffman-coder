Алфавит и сгенерированные специальные кода каждого символа:
a - 0000000

b - 0000001

c - 0000010

d - 0000011

e - 0000100

f - 0000101

g - 0000110

h - 0000111

i - 0001000

j - 0001001

k - 0001010

l - 0001011

m - 000110

n - 000111

o - 001000

p - 001001

q - 001010

r - 001011

s - 001100

t - 001101

u - 001110

v - 001111

w - 010000

x - 010001

y - 010010

z - 010011

A - 010100

B - 010101

C - 010110

D - 010111

E - 011000

F - 011001

G - 011010

H - 011011

I - 011100

J - 011101

K - 011110

L - 011111

M - 100000

N - 100001

O - 100010

P - 100011

Q - 100100

R - 100101

S - 100110

T - 100111

U - 101000

V - 101001

W - 101010

X - 101011

Y - 101100

Z - 101101

0 - 101110

1 - 101111

2 - 110000

3 - 110001

4 - 110010

5 - 110011

6 - 110100

7 - 110101

8 - 110110

9 - 110111

. - 111000

, - 111001

! - 111010

? - 111011

: - 111100

( - 111101

) - 111110

  - 111111


Промежуточные данные:
---------------------------------
На вход кодировщику поступает символ 'a'
Текущее дерево кодировщика:
(0[\0])

Символ 'a' еще не встречался в кодируемом сообщении =>
1) Берется код пустого символа: 
2) К нему добавляется спец-код символа 'a' из алфавита: 0000000
3) К узлу с пустым символом добавляются два новых узла:
Левый сын - новый пустой узел, а правый - узел с новым добавленным символом: 'a':
       (0)      
(0[\0])   (1[a])

Производится пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с пересчитанными весами:
       (1)      
(0[\0])   (1[a])

Результат кодирования символа 'a' - 0000000
---------------------------------
---------------------------------
На вход кодировщику поступает символ 'b'
Текущее дерево кодировщика:
       (1)      
(0[\0])   (1[a])

Символ 'b' еще не встречался в кодируемом сообщении =>
1) Берется код пустого символа: 0
2) К нему добавляется спец-код символа 'b' из алфавита: 0000001
3) К узлу с пустым символом добавляются два новых узла:
Левый сын - новый пустой узел, а правый - узел с новым добавленным символом: 'b':
                (1)      
       (0)         (1[a])
(0[\0])   (1[b])         

Производится пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с пересчитанными весами:
                (2)      
       (1)         (1[a])
(0[\0])   (1[b])         

Результат кодирования символа 'b' - 00000001
---------------------------------
---------------------------------
На вход кодировщику поступает символ 'r'
Текущее дерево кодировщика:
                (2)      
       (1)         (1[a])
(0[\0])   (1[b])         

Символ 'r' еще не встречался в кодируемом сообщении =>
1) Берется код пустого символа: 00
2) К нему добавляется спец-код символа 'r' из алфавита: 001011
3) К узлу с пустым символом добавляются два новых узла:
Левый сын - новый пустой узел, а правый - узел с новым добавленным символом: 'r':
                         (2)      
                (1)         (1[a])
       (0)         (1[b])         
(0[\0])   (1[r])                  

Производится пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с пересчитанными весами:
                         (3)      
                (2)         (1[a])
       (1)         (1[b])         
(0[\0])   (1[r])                  

Требуется перевесить ветки:
                (2)      
       (1)         (1[b])
(0[\0])   (1[r])         

и

(1[a])

Повторный пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с перевешанными ветками и с пересчитанными весами:
      (3)                         
(1[a])                   (2)      
                (1)         (1[b])
         (0[\0])   (1[r])         

Результат кодирования символа 'r' - 00001011
---------------------------------
---------------------------------
На вход кодировщику поступает символ 'a'
Текущее дерево кодировщика:
      (3)                         
(1[a])                   (2)      
                (1)         (1[b])
         (0[\0])   (1[r])         

Символ 'a' уже встречался в кодируемом сообщении и присутствует в дереве => вес узла с этим символом в дереве учеличивается на 1:
      (3)                         
(2[a])                   (2)      
                (1)         (1[b])
         (0[\0])   (1[r])         

Код символа 'a', собранный по пути к узлу дерева: 0

Производится пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с пересчитанными весами:
      (4)                         
(2[a])                   (2)      
                (1)         (1[b])
         (0[\0])   (1[r])         

Результат кодирования символа 'a' - 0
---------------------------------
---------------------------------
На вход кодировщику поступает символ 'k'
Текущее дерево кодировщика:
      (4)                         
(2[a])                   (2)      
                (1)         (1[b])
         (0[\0])   (1[r])         

Символ 'k' еще не встречался в кодируемом сообщении =>
1) Берется код пустого символа: 100
2) К нему добавляется спец-код символа 'k' из алфавита: 0001010
3) К узлу с пустым символом добавляются два новых узла:
Левый сын - новый пустой узел, а правый - узел с новым добавленным символом: 'k':
      (4)                                  
(2[a])                            (2)      
                         (1)         (1[b])
                (0)         (1[r])         
         (0[\0])   (1[k])                  

Производится пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с пересчитанными весами:
      (5)                                  
(2[a])                            (3)      
                         (2)         (1[b])
                (1)         (1[r])         
         (0[\0])   (1[k])                  

Требуется перевесить ветки:
                (2)      
       (1)         (1[r])
(0[\0])   (1[k])         

и

(1[b])

Повторный пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с перевешанными ветками и с пересчитанными весами:
      (5)                                  
(2[a])         (3)                         
         (1[b])                   (2)      
                         (1)         (1[r])
                  (0[\0])   (1[k])         

Результат кодирования символа 'k' - 1000001010
---------------------------------
---------------------------------
На вход кодировщику поступает символ 'a'
Текущее дерево кодировщика:
      (5)                                  
(2[a])         (3)                         
         (1[b])                   (2)      
                         (1)         (1[r])
                  (0[\0])   (1[k])         

Символ 'a' уже встречался в кодируемом сообщении и присутствует в дереве => вес узла с этим символом в дереве учеличивается на 1:
      (5)                                  
(3[a])         (3)                         
         (1[b])                   (2)      
                         (1)         (1[r])
                  (0[\0])   (1[k])         

Код символа 'a', собранный по пути к узлу дерева: 0

Производится пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с пересчитанными весами:
      (6)                                  
(3[a])         (3)                         
         (1[b])                   (2)      
                         (1)         (1[r])
                  (0[\0])   (1[k])         

Результат кодирования символа 'a' - 0
---------------------------------
---------------------------------
На вход кодировщику поступает символ 'd'
Текущее дерево кодировщика:
      (6)                                  
(3[a])         (3)                         
         (1[b])                   (2)      
                         (1)         (1[r])
                  (0[\0])   (1[k])         

Символ 'd' еще не встречался в кодируемом сообщении =>
1) Берется код пустого символа: 1100
2) К нему добавляется спец-код символа 'd' из алфавита: 0000011
3) К узлу с пустым символом добавляются два новых узла:
Левый сын - новый пустой узел, а правый - узел с новым добавленным символом: 'd':
      (6)                                           
(3[a])         (3)                                  
         (1[b])                            (2)      
                                  (1)         (1[r])
                         (0)         (1[k])         
                  (0[\0])   (1[d])                  

Производится пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с пересчитанными весами:
      (7)                                           
(3[a])         (4)                                  
         (1[b])                            (3)      
                                  (2)         (1[r])
                         (1)         (1[k])         
                  (0[\0])   (1[d])                  

Требуется перевесить ветки:
                (2)      
       (1)         (1[k])
(0[\0])   (1[d])         

и

(1[b])

Повторный пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с перевешанными ветками и с пересчитанными весами:
      (7)                                           
(3[a])                            (4)               
                         (2)               (2)      
                (1)         (1[k])   (1[b])   (1[r])
         (0[\0])   (1[d])                           

Результат кодирования символа 'd' - 11000000011
---------------------------------
---------------------------------
На вход кодировщику поступает символ 'a'
Текущее дерево кодировщика:
      (7)                                           
(3[a])                            (4)               
                         (2)               (2)      
                (1)         (1[k])   (1[b])   (1[r])
         (0[\0])   (1[d])                           

Символ 'a' уже встречался в кодируемом сообщении и присутствует в дереве => вес узла с этим символом в дереве учеличивается на 1:
      (7)                                           
(4[a])                            (4)               
                         (2)               (2)      
                (1)         (1[k])   (1[b])   (1[r])
         (0[\0])   (1[d])                           

Код символа 'a', собранный по пути к узлу дерева: 0

Производится пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с пересчитанными весами:
      (8)                                           
(4[a])                            (4)               
                         (2)               (2)      
                (1)         (1[k])   (1[b])   (1[r])
         (0[\0])   (1[d])                           

Результат кодирования символа 'a' - 0
---------------------------------
---------------------------------
На вход кодировщику поступает символ 'b'
Текущее дерево кодировщика:
      (8)                                           
(4[a])                            (4)               
                         (2)               (2)      
                (1)         (1[k])   (1[b])   (1[r])
         (0[\0])   (1[d])                           

Символ 'b' уже встречался в кодируемом сообщении и присутствует в дереве => вес узла с этим символом в дереве учеличивается на 1:
      (8)                                           
(4[a])                            (4)               
                         (2)               (2)      
                (1)         (1[k])   (2[b])   (1[r])
         (0[\0])   (1[d])                           

Код символа 'b', собранный по пути к узлу дерева: 110

Производится пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с пересчитанными весами:
      (9)                                           
(4[a])                            (5)               
                         (2)               (3)      
                (1)         (1[k])   (2[b])   (1[r])
         (0[\0])   (1[d])                           

Требуется перевесить ветки:
(2[b])

и

(1[r])

Повторный пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с перевешанными ветками и с пересчитанными весами:
      (9)                                           
(4[a])                            (5)               
                         (2)               (3)      
                (1)         (1[k])   (1[r])   (2[b])
         (0[\0])   (1[d])                           

Результат кодирования символа 'b' - 110
---------------------------------
---------------------------------
На вход кодировщику поступает символ 'r'
Текущее дерево кодировщика:
      (9)                                           
(4[a])                            (5)               
                         (2)               (3)      
                (1)         (1[k])   (1[r])   (2[b])
         (0[\0])   (1[d])                           

Символ 'r' уже встречался в кодируемом сообщении и присутствует в дереве => вес узла с этим символом в дереве учеличивается на 1:
      (9)                                           
(4[a])                            (5)               
                         (2)               (3)      
                (1)         (1[k])   (2[r])   (2[b])
         (0[\0])   (1[d])                           

Код символа 'r', собранный по пути к узлу дерева: 110

Производится пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с пересчитанными весами:
      (10)                                           
(4[a])                             (6)               
                          (2)               (4)      
                 (1)         (1[k])   (2[r])   (2[b])
          (0[\0])   (1[d])                           

Результат кодирования символа 'r' - 110
---------------------------------
---------------------------------
На вход кодировщику поступает символ 'a'
Текущее дерево кодировщика:
      (10)                                           
(4[a])                             (6)               
                          (2)               (4)      
                 (1)         (1[k])   (2[r])   (2[b])
          (0[\0])   (1[d])                           

Символ 'a' уже встречался в кодируемом сообщении и присутствует в дереве => вес узла с этим символом в дереве учеличивается на 1:
      (10)                                           
(5[a])                             (6)               
                          (2)               (4)      
                 (1)         (1[k])   (2[r])   (2[b])
          (0[\0])   (1[d])                           

Код символа 'a', собранный по пути к узлу дерева: 0

Производится пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с пересчитанными весами:
      (11)                                           
(5[a])                             (6)               
                          (2)               (4)      
                 (1)         (1[k])   (2[r])   (2[b])
          (0[\0])   (1[d])                           

Результат кодирования символа 'a' - 0
---------------------------------
---------------------------------
На вход кодировщику поступает символ '!'
Текущее дерево кодировщика:
      (11)                                           
(5[a])                             (6)               
                          (2)               (4)      
                 (1)         (1[k])   (2[r])   (2[b])
          (0[\0])   (1[d])                           

Символ '!' еще не встречался в кодируемом сообщении =>
1) Берется код пустого символа: 1000
2) К нему добавляется спец-код символа '!' из алфавита: 111010
3) К узлу с пустым символом добавляются два новых узла:
Левый сын - новый пустой узел, а правый - узел с новым добавленным символом: '!':
      (11)                                                    
(5[a])                                      (6)               
                                   (2)               (4)      
                          (1)         (1[k])   (2[r])   (2[b])
                 (0)         (1[d])                           
          (0[\0])   (1[!])                                    

Производится пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с пересчитанными весами:
      (12)                                                    
(5[a])                                      (7)               
                                   (3)               (4)      
                          (2)         (1[k])   (2[r])   (2[b])
                 (1)         (1[d])                           
          (0[\0])   (1[!])                                    

Требуется перевесить ветки:
                (2)      
       (1)         (1[d])
(0[\0])   (1[!])         

и

(1[k])

Повторный пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с перевешанными ветками и с пересчитанными весами:
      (12)                                                    
(5[a])                                      (7)               
                (3)                                  (4)      
          (1[k])                   (2)         (2[r])   (2[b])
                          (1)         (1[d])                  
                   (0[\0])   (1[!])                           

Результат кодирования символа '!' - 1000111010
---------------------------------
