Алфавит и сгенерированные специальные кода каждого символа:
a - 0000000
b - 0000001
c - 0000010
d - 0000011
e - 0000100
f - 0000101
g - 0000110
h - 0000111
i - 0001000
j - 0001001
k - 0001010
l - 0001011
m - 000110
n - 000111
o - 001000
p - 001001
q - 001010
r - 001011
s - 001100
t - 001101
u - 001110
v - 001111
w - 010000
x - 010001
y - 010010
z - 010011
A - 010100
B - 010101
C - 010110
D - 010111
E - 011000
F - 011001
G - 011010
H - 011011
I - 011100
J - 011101
K - 011110
L - 011111
M - 100000
N - 100001
O - 100010
P - 100011
Q - 100100
R - 100101
S - 100110
T - 100111
U - 101000
V - 101001
W - 101010
X - 101011
Y - 101100
Z - 101101
0 - 101110
1 - 101111
2 - 110000
3 - 110001
4 - 110010
5 - 110011
6 - 110100
7 - 110101
8 - 110110
9 - 110111
. - 111000
, - 111001
! - 111010
? - 111011
: - 111100
( - 111101
) - 111110
  - 111111


Промежуточные данные:
Начало работы декодировщика: на вход декодеру подается последовательность бит:
0110110000000000001001101110010010110011111110000001110100000010000000100000110001111000111000010110100011101000101000
---------------------------------
Текущее дерево кодировщика:
(0[\0])

Оставшееся нераскодированное сообщение: 0110110000000000001001101110010010110011111110000001110100000010000000100000110001111000111000010110100011101000101000

По первым битам нераскодированной части сообщения строится путь в дереве Хаффмана до тех пор, пока не встретится лист
Следующий набор бит:  привел декодера к узлу с символом '\0' - пустым символом =>
=> по следующим битам нераскодированной части сообщения определяется символ из специальной кодировки

Оставшееся нераскодированное сообщение: 0110110000000000001001101110010010110011111110000001110100000010000000100000110001111000111000010110100011101000101000
Следующий набор бит: 011011 привел декодера к узлу с символом 'H' в дереве специальной кодировки, который и будет очередным результатом декодирования

К узлу с пустым символом добавляются два новых узла:
Левый сын - новый пустой узел, а правый - узел с новым добавленным символом: 'H':
       (0)      
(0[\0])   (1[H])

Производится пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с пересчитанными весами:
       (1)      
(0[\0])   (1[H])

Текущий результат декодирования сообщения: 'H'
---------------------------------
---------------------------------
Текущее дерево кодировщика:
       (1)      
(0[\0])   (1[H])

Оставшееся нераскодированное сообщение: 0000000000001001101110010010110011111110000001110100000010000000100000110001111000111000010110100011101000101000

По первым битам нераскодированной части сообщения строится путь в дереве Хаффмана до тех пор, пока не встретится лист
Следующий набор бит: 0 привел декодера к узлу с символом '\0' - пустым символом =>
=> по следующим битам нераскодированной части сообщения определяется символ из специальной кодировки

Оставшееся нераскодированное сообщение: 000000000001001101110010010110011111110000001110100000010000000100000110001111000111000010110100011101000101000
Следующий набор бит: 0000000 привел декодера к узлу с символом 'a' в дереве специальной кодировки, который и будет очередным результатом декодирования

К узлу с пустым символом добавляются два новых узла:
Левый сын - новый пустой узел, а правый - узел с новым добавленным символом: 'a':
                (1)      
       (0)         (1[H])
(0[\0])   (1[a])         

Производится пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с пересчитанными весами:
                (2)      
       (1)         (1[H])
(0[\0])   (1[a])         

Текущий результат декодирования сообщения: 'Ha'
---------------------------------
---------------------------------
Текущее дерево кодировщика:
                (2)      
       (1)         (1[H])
(0[\0])   (1[a])         

Оставшееся нераскодированное сообщение: 00001001101110010010110011111110000001110100000010000000100000110001111000111000010110100011101000101000

По первым битам нераскодированной части сообщения строится путь в дереве Хаффмана до тех пор, пока не встретится лист
Следующий набор бит: 00 привел декодера к узлу с символом '\0' - пустым символом =>
=> по следующим битам нераскодированной части сообщения определяется символ из специальной кодировки

Оставшееся нераскодированное сообщение: 001001101110010010110011111110000001110100000010000000100000110001111000111000010110100011101000101000
Следующий набор бит: 001001 привел декодера к узлу с символом 'p' в дереве специальной кодировки, который и будет очередным результатом декодирования

К узлу с пустым символом добавляются два новых узла:
Левый сын - новый пустой узел, а правый - узел с новым добавленным символом: 'p':
                         (2)      
                (1)         (1[H])
       (0)         (1[a])         
(0[\0])   (1[p])                  

Производится пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с пересчитанными весами:
                         (3)      
                (2)         (1[H])
       (1)         (1[a])         
(0[\0])   (1[p])                  

Требуется перевесить ветки:
                (2)      
       (1)         (1[a])
(0[\0])   (1[p])         

и

(1[H])

Повторный пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с перевешанными ветками и с пересчитанными весами:
      (3)                         
(1[H])                   (2)      
                (1)         (1[a])
         (0[\0])   (1[p])         

Текущий результат декодирования сообщения: 'Hap'
---------------------------------
---------------------------------
Текущее дерево кодировщика:
      (3)                         
(1[H])                   (2)      
                (1)         (1[a])
         (0[\0])   (1[p])         

Оставшееся нераскодированное сообщение: 101110010010110011111110000001110100000010000000100000110001111000111000010110100011101000101000

По первым битам нераскодированной части сообщения строится путь в дереве Хаффмана до тех пор, пока не встретится лист
Следующий набор бит: 101 привел декодера к узлу с символом 'p', который и будет очередным результатом декодирования
Вес узла с этим символом в дереве учеличивается на 1:
      (3)                         
(1[H])                   (2)      
                (1)         (1[a])
         (0[\0])   (2[p])         

Производится пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с пересчитанными весами:
      (4)                         
(1[H])                   (3)      
                (2)         (1[a])
         (0[\0])   (2[p])         

Требуется перевесить ветки:
       (2)      
(0[\0])   (2[p])

и

(1[H])

Повторный пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с перевешанными ветками и с пересчитанными весами:
                (4)               
       (2)               (2)      
(0[\0])   (2[p])   (1[H])   (1[a])

Требуется перевесить ветки:
(2[p])

и

(1[a])

Повторный пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с перевешанными ветками и с пересчитанными весами:
                (4)               
       (1)               (3)      
(0[\0])   (1[a])   (1[H])   (2[p])

Требуется перевесить ветки:
(2[p])

и

       (1)      
(0[\0])   (1[a])

Повторный пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с перевешанными ветками и с пересчитанными весами:
      (4)                         
(2[p])         (2)                
         (1[H])          (1)      
                  (0[\0])   (1[a])

Текущий результат декодирования сообщения: 'Happ'
---------------------------------
---------------------------------
Текущее дерево кодировщика:
      (4)                         
(2[p])         (2)                
         (1[H])          (1)      
                  (0[\0])   (1[a])

Оставшееся нераскодированное сообщение: 110010010110011111110000001110100000010000000100000110001111000111000010110100011101000101000

По первым битам нераскодированной части сообщения строится путь в дереве Хаффмана до тех пор, пока не встретится лист
Следующий набор бит: 110 привел декодера к узлу с символом '\0' - пустым символом =>
=> по следующим битам нераскодированной части сообщения определяется символ из специальной кодировки

Оставшееся нераскодированное сообщение: 010010110011111110000001110100000010000000100000110001111000111000010110100011101000101000
Следующий набор бит: 010010 привел декодера к узлу с символом 'y' в дереве специальной кодировки, который и будет очередным результатом декодирования

К узлу с пустым символом добавляются два новых узла:
Левый сын - новый пустой узел, а правый - узел с новым добавленным символом: 'y':
      (4)                                  
(2[p])         (2)                         
         (1[H])                   (1)      
                         (0)         (1[a])
                  (0[\0])   (1[y])         

Производится пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с пересчитанными весами:
      (5)                                  
(2[p])         (3)                         
         (1[H])                   (2)      
                         (1)         (1[a])
                  (0[\0])   (1[y])         

Текущий результат декодирования сообщения: 'Happy'
---------------------------------
---------------------------------
Текущее дерево кодировщика:
      (5)                                  
(2[p])         (3)                         
         (1[H])                   (2)      
                         (1)         (1[a])
                  (0[\0])   (1[y])         

Оставшееся нераскодированное сообщение: 110011111110000001110100000010000000100000110001111000111000010110100011101000101000

По первым битам нераскодированной части сообщения строится путь в дереве Хаффмана до тех пор, пока не встретится лист
Следующий набор бит: 1100 привел декодера к узлу с символом '\0' - пустым символом =>
=> по следующим битам нераскодированной части сообщения определяется символ из специальной кодировки

Оставшееся нераскодированное сообщение: 11111110000001110100000010000000100000110001111000111000010110100011101000101000
Следующий набор бит: 111111 привел декодера к узлу с символом ' ' в дереве специальной кодировки, который и будет очередным результатом декодирования

К узлу с пустым символом добавляются два новых узла:
Левый сын - новый пустой узел, а правый - узел с новым добавленным символом: ' ':
      (5)                                           
(2[p])         (3)                                  
         (1[H])                            (2)      
                                  (1)         (1[a])
                         (0)         (1[y])         
                  (0[\0])   (1[ ])                  

Производится пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с пересчитанными весами:
      (6)                                           
(2[p])         (4)                                  
         (1[H])                            (3)      
                                  (2)         (1[a])
                         (1)         (1[y])         
                  (0[\0])   (1[ ])                  

Требуется перевесить ветки:
                (2)      
       (1)         (1[y])
(0[\0])   (1[ ])         

и

(1[H])

Повторный пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с перевешанными ветками и с пересчитанными весами:
      (6)                                           
(2[p])                            (4)               
                         (2)               (2)      
                (1)         (1[y])   (1[H])   (1[a])
         (0[\0])   (1[ ])                           

Текущий результат декодирования сообщения: 'Happy '
---------------------------------
---------------------------------
Текущее дерево кодировщика:
      (6)                                           
(2[p])                            (4)               
                         (2)               (2)      
                (1)         (1[y])   (1[H])   (1[a])
         (0[\0])   (1[ ])                           

Оставшееся нераскодированное сообщение: 10000001110100000010000000100000110001111000111000010110100011101000101000

По первым битам нераскодированной части сообщения строится путь в дереве Хаффмана до тех пор, пока не встретится лист
Следующий набор бит: 1000 привел декодера к узлу с символом '\0' - пустым символом =>
=> по следующим битам нераскодированной части сообщения определяется символ из специальной кодировки

Оставшееся нераскодированное сообщение: 0001110100000010000000100000110001111000111000010110100011101000101000
Следующий набор бит: 000111 привел декодера к узлу с символом 'n' в дереве специальной кодировки, который и будет очередным результатом декодирования

К узлу с пустым символом добавляются два новых узла:
Левый сын - новый пустой узел, а правый - узел с новым добавленным символом: 'n':
      (6)                                                    
(2[p])                                     (4)               
                                  (2)               (2)      
                         (1)         (1[y])   (1[H])   (1[a])
                (0)         (1[ ])                           
         (0[\0])   (1[n])                                    

Производится пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с пересчитанными весами:
      (7)                                                    
(2[p])                                     (5)               
                                  (3)               (2)      
                         (2)         (1[y])   (1[H])   (1[a])
                (1)         (1[ ])                           
         (0[\0])   (1[n])                                    

Требуется перевесить ветки:
                (2)      
       (1)         (1[ ])
(0[\0])   (1[n])         

и

(1[a])

Повторный пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с перевешанными ветками и с пересчитанными весами:
      (7)                                                    
(2[p])                  (5)                                  
               (2)               (3)                         
         (1[a])   (1[y])   (1[H])                   (2)      
                                           (1)         (1[ ])
                                    (0[\0])   (1[n])         

Требуется перевесить ветки:
      (3)                         
(1[H])                   (2)      
                (1)         (1[ ])
         (0[\0])   (1[n])         

и

(2[p])

Повторный пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с перевешанными ветками и с пересчитанными весами:
                                  (7)                        
      (3)                                           (4)      
(1[H])                   (2)               (2)         (2[p])
                (1)         (1[ ])   (1[a])   (1[y])         
         (0[\0])   (1[n])                                    

Текущий результат декодирования сообщения: 'Happy n'
---------------------------------
---------------------------------
Текущее дерево кодировщика:
                                  (7)                        
      (3)                                           (4)      
(1[H])                   (2)               (2)         (2[p])
                (1)         (1[ ])   (1[a])   (1[y])         
         (0[\0])   (1[n])                                    

Оставшееся нераскодированное сообщение: 0100000010000000100000110001111000111000010110100011101000101000

По первым битам нераскодированной части сообщения строится путь в дереве Хаффмана до тех пор, пока не встретится лист
Следующий набор бит: 0100 привел декодера к узлу с символом '\0' - пустым символом =>
=> по следующим битам нераскодированной части сообщения определяется символ из специальной кодировки

Оставшееся нераскодированное сообщение: 000010000000100000110001111000111000010110100011101000101000
Следующий набор бит: 0000100 привел декодера к узлу с символом 'e' в дереве специальной кодировки, который и будет очередным результатом декодирования

К узлу с пустым символом добавляются два новых узла:
Левый сын - новый пустой узел, а правый - узел с новым добавленным символом: 'e':
                                           (7)                        
      (3)                                                    (4)      
(1[H])                            (2)               (2)         (2[p])
                         (1)         (1[ ])   (1[a])   (1[y])         
                (0)         (1[n])                                    
         (0[\0])   (1[e])                                             

Производится пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с пересчитанными весами:
                                           (8)                        
      (4)                                                    (4)      
(1[H])                            (3)               (2)         (2[p])
                         (2)         (1[ ])   (1[a])   (1[y])         
                (1)         (1[n])                                    
         (0[\0])   (1[e])                                             

Требуется перевесить ветки:
                (2)      
       (1)         (1[n])
(0[\0])   (1[e])         

и

(1[H])

Повторный пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с перевешанными ветками и с пересчитанными весами:
                                           (8)                        
                         (4)                                 (4)      
                (2)               (2)               (2)         (2[p])
       (1)         (1[n])   (1[H])   (1[ ])   (1[a])   (1[y])         
(0[\0])   (1[e])                                                      

Текущий результат декодирования сообщения: 'Happy ne'
---------------------------------
---------------------------------
Текущее дерево кодировщика:
                                           (8)                        
                         (4)                                 (4)      
                (2)               (2)               (2)         (2[p])
       (1)         (1[n])   (1[H])   (1[ ])   (1[a])   (1[y])         
(0[\0])   (1[e])                                                      

Оставшееся нераскодированное сообщение: 00000100000110001111000111000010110100011101000101000

По первым битам нераскодированной части сообщения строится путь в дереве Хаффмана до тех пор, пока не встретится лист
Следующий набор бит: 0000 привел декодера к узлу с символом '\0' - пустым символом =>
=> по следующим битам нераскодированной части сообщения определяется символ из специальной кодировки

Оставшееся нераскодированное сообщение: 0100000110001111000111000010110100011101000101000
Следующий набор бит: 010000 привел декодера к узлу с символом 'w' в дереве специальной кодировки, который и будет очередным результатом декодирования

К узлу с пустым символом добавляются два новых узла:
Левый сын - новый пустой узел, а правый - узел с новым добавленным символом: 'w':
                                                    (8)                        
                                  (4)                                 (4)      
                         (2)               (2)               (2)         (2[p])
                (1)         (1[n])   (1[H])   (1[ ])   (1[a])   (1[y])         
       (0)         (1[e])                                                      
(0[\0])   (1[w])                                                               

Производится пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с пересчитанными весами:
                                                    (9)                        
                                  (5)                                 (4)      
                         (3)               (2)               (2)         (2[p])
                (2)         (1[n])   (1[H])   (1[ ])   (1[a])   (1[y])         
       (1)         (1[e])                                                      
(0[\0])   (1[w])                                                               

Требуется перевесить ветки:
                (2)      
       (1)         (1[e])
(0[\0])   (1[w])         

и

(1[y])

Повторный пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с перевешанными ветками и с пересчитанными весами:
                                 (9)                                           
               (4)                                                    (5)      
      (2)               (2)               (3)                            (2[p])
(1[y])   (1[n])   (1[H])   (1[ ])   (1[a])                   (2)               
                                                    (1)         (1[e])         
                                             (0[\0])   (1[w])                  

Требуется перевесить ветки:
      (3)                         
(1[a])                   (2)      
                (1)         (1[e])
         (0[\0])   (1[w])         

и

(2[p])

Повторный пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с перевешанными ветками и с пересчитанными весами:
                                 (9)                                           
               (4)                        (5)                                  
      (2)               (2)         (2[p])         (3)                         
(1[y])   (1[n])   (1[H])   (1[ ])            (1[a])                   (2)      
                                                             (1)         (1[e])
                                                      (0[\0])   (1[w])         

Текущий результат декодирования сообщения: 'Happy new'
---------------------------------
---------------------------------
Текущее дерево кодировщика:
                                 (9)                                           
               (4)                        (5)                                  
      (2)               (2)         (2[p])         (3)                         
(1[y])   (1[n])   (1[H])   (1[ ])            (1[a])                   (2)      
                                                             (1)         (1[e])
                                                      (0[\0])   (1[w])         

Оставшееся нераскодированное сообщение: 0110001111000111000010110100011101000101000

По первым битам нераскодированной части сообщения строится путь в дереве Хаффмана до тех пор, пока не встретится лист
Следующий набор бит: 011 привел декодера к узлу с символом ' ', который и будет очередным результатом декодирования
Вес узла с этим символом в дереве учеличивается на 1:
                                 (9)                                           
               (4)                        (5)                                  
      (2)               (2)         (2[p])         (3)                         
(1[y])   (1[n])   (1[H])   (2[ ])            (1[a])                   (2)      
                                                             (1)         (1[e])
                                                      (0[\0])   (1[w])         

Производится пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с пересчитанными весами:
                                 (10)                                           
               (5)                         (5)                                  
      (2)               (3)          (2[p])         (3)                         
(1[y])   (1[n])   (1[H])   (2[ ])             (1[a])                   (2)      
                                                              (1)         (1[e])
                                                       (0[\0])   (1[w])         

Требуется перевесить ветки:
(2[ ])

и

(1[a])

Повторный пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с перевешанными ветками и с пересчитанными весами:
                                 (10)                                           
               (4)                         (6)                                  
      (2)               (2)          (2[p])         (4)                         
(1[y])   (1[n])   (1[H])   (1[a])             (2[ ])                   (2)      
                                                              (1)         (1[e])
                                                       (0[\0])   (1[w])         

Текущий результат декодирования сообщения: 'Happy new '
---------------------------------
---------------------------------
Текущее дерево кодировщика:
                                 (10)                                           
               (4)                         (6)                                  
      (2)               (2)          (2[p])         (4)                         
(1[y])   (1[n])   (1[H])   (1[a])             (2[ ])                   (2)      
                                                              (1)         (1[e])
                                                       (0[\0])   (1[w])         

Оставшееся нераскодированное сообщение: 0001111000111000010110100011101000101000

По первым битам нераскодированной части сообщения строится путь в дереве Хаффмана до тех пор, пока не встретится лист
Следующий набор бит: 000 привел декодера к узлу с символом 'y', который и будет очередным результатом декодирования
Вес узла с этим символом в дереве учеличивается на 1:
                                 (10)                                           
               (4)                         (6)                                  
      (2)               (2)          (2[p])         (4)                         
(2[y])   (1[n])   (1[H])   (1[a])             (2[ ])                   (2)      
                                                              (1)         (1[e])
                                                       (0[\0])   (1[w])         

Производится пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с пересчитанными весами:
                                 (11)                                           
               (5)                         (6)                                  
      (3)               (2)          (2[p])         (4)                         
(2[y])   (1[n])   (1[H])   (1[a])             (2[ ])                   (2)      
                                                              (1)         (1[e])
                                                       (0[\0])   (1[w])         

Требуется перевесить ветки:
(2[y])

и

(1[a])

Повторный пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с перевешанными ветками и с пересчитанными весами:
                                 (11)                                           
               (5)                         (6)                                  
      (2)               (3)          (2[p])         (4)                         
(1[a])   (1[n])   (1[H])   (2[y])             (2[ ])                   (2)      
                                                              (1)         (1[e])
                                                       (0[\0])   (1[w])         

Требуется перевесить ветки:
      (3)      
(1[H])   (2[y])

и

(2[p])

Повторный пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с перевешанными ветками и с пересчитанными весами:
                        (11)                                                    
               (4)                         (7)                                  
      (2)         (2[p])          (3)               (4)                         
(1[a])   (1[n])             (1[H])   (2[y])   (2[ ])                   (2)      
                                                              (1)         (1[e])
                                                       (0[\0])   (1[w])         

Текущий результат декодирования сообщения: 'Happy new y'
---------------------------------
---------------------------------
Текущее дерево кодировщика:
                        (11)                                                    
               (4)                         (7)                                  
      (2)         (2[p])          (3)               (4)                         
(1[a])   (1[n])             (1[H])   (2[y])   (2[ ])                   (2)      
                                                              (1)         (1[e])
                                                       (0[\0])   (1[w])         

Оставшееся нераскодированное сообщение: 1111000111000010110100011101000101000

По первым битам нераскодированной части сообщения строится путь в дереве Хаффмана до тех пор, пока не встретится лист
Следующий набор бит: 1111 привел декодера к узлу с символом 'e', который и будет очередным результатом декодирования
Вес узла с этим символом в дереве учеличивается на 1:
                        (11)                                                    
               (4)                         (7)                                  
      (2)         (2[p])          (3)               (4)                         
(1[a])   (1[n])             (1[H])   (2[y])   (2[ ])                   (2)      
                                                              (1)         (2[e])
                                                       (0[\0])   (1[w])         

Производится пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с пересчитанными весами:
                        (12)                                                    
               (4)                         (8)                                  
      (2)         (2[p])          (3)               (5)                         
(1[a])   (1[n])             (1[H])   (2[y])   (2[ ])                   (3)      
                                                              (1)         (2[e])
                                                       (0[\0])   (1[w])         

Требуется перевесить ветки:
(2[e])

и

(1[H])

Повторный пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с перевешанными ветками и с пересчитанными весами:
                        (12)                                                    
               (4)                         (8)                                  
      (2)         (2[p])          (4)               (4)                         
(1[a])   (1[n])             (2[e])   (2[y])   (2[ ])                   (2)      
                                                              (1)         (1[H])
                                                       (0[\0])   (1[w])         

Текущий результат декодирования сообщения: 'Happy new ye'
---------------------------------
---------------------------------
Текущее дерево кодировщика:
                        (12)                                                    
               (4)                         (8)                                  
      (2)         (2[p])          (4)               (4)                         
(1[a])   (1[n])             (2[e])   (2[y])   (2[ ])                   (2)      
                                                              (1)         (1[H])
                                                       (0[\0])   (1[w])         

Оставшееся нераскодированное сообщение: 000111000010110100011101000101000

По первым битам нераскодированной части сообщения строится путь в дереве Хаффмана до тех пор, пока не встретится лист
Следующий набор бит: 000 привел декодера к узлу с символом 'a', который и будет очередным результатом декодирования
Вес узла с этим символом в дереве учеличивается на 1:
                        (12)                                                    
               (4)                         (8)                                  
      (2)         (2[p])          (4)               (4)                         
(2[a])   (1[n])             (2[e])   (2[y])   (2[ ])                   (2)      
                                                              (1)         (1[H])
                                                       (0[\0])   (1[w])         

Производится пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с пересчитанными весами:
                        (13)                                                    
               (5)                         (8)                                  
      (3)         (2[p])          (4)               (4)                         
(2[a])   (1[n])             (2[e])   (2[y])   (2[ ])                   (2)      
                                                              (1)         (1[H])
                                                       (0[\0])   (1[w])         

Требуется перевесить ветки:
(2[a])

и

(1[n])

Повторный пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с перевешанными ветками и с пересчитанными весами:
                        (13)                                                    
               (5)                         (8)                                  
      (3)         (2[p])          (4)               (4)                         
(1[n])   (2[a])             (2[e])   (2[y])   (2[ ])                   (2)      
                                                              (1)         (1[H])
                                                       (0[\0])   (1[w])         

Требуется перевесить ветки:
      (3)      
(1[n])   (2[a])

и

(2[p])

Повторный пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с перевешанными ветками и с пересчитанными весами:
                        (13)                                                    
      (5)                                  (8)                                  
(2[p])         (3)                (4)               (4)                         
         (1[n])   (2[a])    (2[e])   (2[y])   (2[ ])                   (2)      
                                                              (1)         (1[H])
                                                       (0[\0])   (1[w])         

Текущий результат декодирования сообщения: 'Happy new yea'
---------------------------------
---------------------------------
Текущее дерево кодировщика:
                        (13)                                                    
      (5)                                  (8)                                  
(2[p])         (3)                (4)               (4)                         
         (1[n])   (2[a])    (2[e])   (2[y])   (2[ ])                   (2)      
                                                              (1)         (1[H])
                                                       (0[\0])   (1[w])         

Оставшееся нераскодированное сообщение: 111000010110100011101000101000

По первым битам нераскодированной части сообщения строится путь в дереве Хаффмана до тех пор, пока не встретится лист
Следующий набор бит: 11100 привел декодера к узлу с символом '\0' - пустым символом =>
=> по следующим битам нераскодированной части сообщения определяется символ из специальной кодировки

Оставшееся нераскодированное сообщение: 0010110100011101000101000
Следующий набор бит: 001011 привел декодера к узлу с символом 'r' в дереве специальной кодировки, который и будет очередным результатом декодирования

К узлу с пустым символом добавляются два новых узла:
Левый сын - новый пустой узел, а правый - узел с новым добавленным символом: 'r':
                        (13)                                                             
      (5)                                  (8)                                           
(2[p])         (3)                (4)               (4)                                  
         (1[n])   (2[a])    (2[e])   (2[y])   (2[ ])                            (2)      
                                                                       (1)         (1[H])
                                                              (0)         (1[w])         
                                                       (0[\0])   (1[r])                  

Производится пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с пересчитанными весами:
                        (14)                                                             
      (5)                                  (9)                                           
(2[p])         (3)                (4)               (5)                                  
         (1[n])   (2[a])    (2[e])   (2[y])   (2[ ])                            (3)      
                                                                       (2)         (1[H])
                                                              (1)         (1[w])         
                                                       (0[\0])   (1[r])                  

Требуется перевесить ветки:
                (2)      
       (1)         (1[w])
(0[\0])   (1[r])         

и

(1[n])

Повторный пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с перевешанными ветками и с пересчитанными весами:
                                           (14)                                          
      (6)                                                     (8)                        
(2[p])                            (4)                (4)               (4)               
                         (2)         (2[a])    (2[e])   (2[y])   (2[ ])         (2)      
                (1)         (1[w])                                        (1[n])   (1[H])
         (0[\0])   (1[r])                                                                

Текущий результат декодирования сообщения: 'Happy new year'
---------------------------------
---------------------------------
Текущее дерево кодировщика:
                                           (14)                                          
      (6)                                                     (8)                        
(2[p])                            (4)                (4)               (4)               
                         (2)         (2[a])    (2[e])   (2[y])   (2[ ])         (2)      
                (1)         (1[w])                                        (1[n])   (1[H])
         (0[\0])   (1[r])                                                                

Оставшееся нераскодированное сообщение: 0100011101000101000

По первым битам нераскодированной части сообщения строится путь в дереве Хаффмана до тех пор, пока не встретится лист
Следующий набор бит: 01000 привел декодера к узлу с символом '\0' - пустым символом =>
=> по следующим битам нераскодированной части сообщения определяется символ из специальной кодировки

Оставшееся нераскодированное сообщение: 11101000101000
Следующий набор бит: 111010 привел декодера к узлу с символом '!' в дереве специальной кодировки, который и будет очередным результатом декодирования

К узлу с пустым символом добавляются два новых узла:
Левый сын - новый пустой узел, а правый - узел с новым добавленным символом: '!':
                                                    (14)                                          
      (6)                                                              (8)                        
(2[p])                                     (4)                (4)               (4)               
                                  (2)         (2[a])    (2[e])   (2[y])   (2[ ])         (2)      
                         (1)         (1[w])                                        (1[n])   (1[H])
                (0)         (1[r])                                                                
         (0[\0])   (1[!])                                                                         

Производится пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с пересчитанными весами:
                                                    (15)                                          
      (7)                                                              (8)                        
(2[p])                                     (5)                (4)               (4)               
                                  (3)         (2[a])    (2[e])   (2[y])   (2[ ])         (2)      
                         (2)         (1[w])                                        (1[n])   (1[H])
                (1)         (1[r])                                                                
         (0[\0])   (1[!])                                                                         

Требуется перевесить ветки:
                (2)      
       (1)         (1[r])
(0[\0])   (1[!])         

и

(1[H])

Повторный пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с перевешанными ветками и с пересчитанными весами:
                                 (15)                                                             
      (6)                                           (9)                                           
(2[p])                  (4)                (4)               (5)                                  
               (2)         (2[a])    (2[e])   (2[y])   (2[ ])         (3)                         
         (1[H])   (1[w])                                        (1[n])                   (2)      
                                                                                (1)         (1[r])
                                                                         (0[\0])   (1[!])         

Требуется перевесить ветки:
      (3)                         
(1[n])                   (2)      
                (1)         (1[r])
         (0[\0])   (1[!])         

и

(2[p])

Повторный пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с перевешанными ветками и с пересчитанными весами:
                                                             (15)                                 
                                  (7)                                           (8)               
      (3)                                           (4)                (4)               (4)      
(1[n])                   (2)               (2)         (2[a])    (2[e])   (2[y])   (2[ ])   (2[p])
                (1)         (1[r])   (1[H])   (1[w])                                              
         (0[\0])   (1[!])                                                                         

Текущий результат декодирования сообщения: 'Happy new year!'
---------------------------------
---------------------------------
Текущее дерево кодировщика:
                                                             (15)                                 
                                  (7)                                           (8)               
      (3)                                           (4)                (4)               (4)      
(1[n])                   (2)               (2)         (2[a])    (2[e])   (2[y])   (2[ ])   (2[p])
                (1)         (1[r])   (1[H])   (1[w])                                              
         (0[\0])   (1[!])                                                                         

Оставшееся нераскодированное сообщение: 00101000

По первым битам нераскодированной части сообщения строится путь в дереве Хаффмана до тех пор, пока не встретится лист
Следующий набор бит: 00101 привел декодера к узлу с символом '!', который и будет очередным результатом декодирования
Вес узла с этим символом в дереве учеличивается на 1:
                                                             (15)                                 
                                  (7)                                           (8)               
      (3)                                           (4)                (4)               (4)      
(1[n])                   (2)               (2)         (2[a])    (2[e])   (2[y])   (2[ ])   (2[p])
                (1)         (1[r])   (1[H])   (1[w])                                              
         (0[\0])   (2[!])                                                                         

Производится пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с пересчитанными весами:
                                                             (16)                                 
                                  (8)                                           (8)               
      (4)                                           (4)                (4)               (4)      
(1[n])                   (3)               (2)         (2[a])    (2[e])   (2[y])   (2[ ])   (2[p])
                (2)         (1[r])   (1[H])   (1[w])                                              
         (0[\0])   (2[!])                                                                         

Требуется перевесить ветки:
       (2)      
(0[\0])   (2[!])

и

(1[n])

Повторный пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с перевешанными ветками и с пересчитанными весами:
                                                             (16)                                 
                                  (8)                                           (8)               
                (4)                                 (4)                (4)               (4)      
       (2)               (2)               (2)         (2[a])    (2[e])   (2[y])   (2[ ])   (2[p])
(0[\0])   (2[!])   (1[n])   (1[r])   (1[H])   (1[w])                                              

Требуется перевесить ветки:
(2[!])

и

(1[w])

Повторный пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с перевешанными ветками и с пересчитанными весами:
                                                             (16)                                 
                                  (8)                                           (8)               
                (3)                                 (5)                (4)               (4)      
       (1)               (2)               (3)         (2[a])    (2[e])   (2[y])   (2[ ])   (2[p])
(0[\0])   (1[w])   (1[n])   (1[r])   (1[H])   (2[!])                                              

Требуется перевесить ветки:
(2[!])

и

       (1)      
(0[\0])   (1[w])

Повторный пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с перевешанными ветками и с пересчитанными весами:
                                                             (16)                                 
                        (8)                                                     (8)               
      (4)                                           (4)                (4)               (4)      
(2[!])         (2)               (2)                   (2[a])    (2[e])   (2[y])   (2[ ])   (2[p])
         (1[n])   (1[r])   (1[H])          (1)                                                    
                                    (0[\0])   (1[w])                                              

Текущий результат декодирования сообщения: 'Happy new year!!'
---------------------------------
---------------------------------
Текущее дерево кодировщика:
                                                             (16)                                 
                        (8)                                                     (8)               
      (4)                                           (4)                (4)               (4)      
(2[!])         (2)               (2)                   (2[a])    (2[e])   (2[y])   (2[ ])   (2[p])
         (1[n])   (1[r])   (1[H])          (1)                                                    
                                    (0[\0])   (1[w])                                              

Оставшееся нераскодированное сообщение: 000

По первым битам нераскодированной части сообщения строится путь в дереве Хаффмана до тех пор, пока не встретится лист
Следующий набор бит: 000 привел декодера к узлу с символом '!', который и будет очередным результатом декодирования
Вес узла с этим символом в дереве учеличивается на 1:
                                                             (16)                                 
                        (8)                                                     (8)               
      (4)                                           (4)                (4)               (4)      
(3[!])         (2)               (2)                   (2[a])    (2[e])   (2[y])   (2[ ])   (2[p])
         (1[n])   (1[r])   (1[H])          (1)                                                    
                                    (0[\0])   (1[w])                                              

Производится пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с пересчитанными весами:
                                                             (17)                                 
                        (9)                                                     (8)               
      (5)                                           (4)                (4)               (4)      
(3[!])         (2)               (2)                   (2[a])    (2[e])   (2[y])   (2[ ])   (2[p])
         (1[n])   (1[r])   (1[H])          (1)                                                    
                                    (0[\0])   (1[w])                                              

Требуется перевесить ветки:
(3[!])

и

(2[p])

Повторный пересчет всех весов и перевешивание дерева в случае необходимости:
Дерево с перевешанными ветками и с пересчитанными весами:
                                                             (17)                                 
                        (8)                                                     (9)               
      (4)                                           (4)                (4)               (5)      
(2[p])         (2)               (2)                   (2[a])    (2[e])   (2[y])   (2[ ])   (3[!])
         (1[n])   (1[r])   (1[H])          (1)                                                    
                                    (0[\0])   (1[w])                                              

Текущий результат декодирования сообщения: 'Happy new year!!!'
---------------------------------
Конец работы декодировщика.
